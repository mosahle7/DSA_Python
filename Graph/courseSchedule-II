from queue import Queue
class Solution:
    def findOrder(self, num: int, preq):
        indeg=[0]*num
        ans=[]
        adj=[[] for _ in range(num)]
        q=Queue()
        for i in preq:
            adj[i[1]].append(i[0])
            indeg[i[0]]+=1
        for i in range(num):
            if indeg[i]==0:
                q.put(i)
        while not(q.empty()):
            cur=q.get()
            ans.append(cur)
            for k in adj[cur]:
                indeg[k]-=1
                if indeg[k]==0:
                    q.put(k)
        return ans if len(ans)==num else []

class Solution:
    def findOrder(self, num: int, preq):
        indeg=[0]*num
        ans=[]
        adj=[[] for _ in range(num)]
        vis=[False]*(num)
        for i in preq:
            adj[i[1]].append(i[0])
            indeg[i[0]]+=1
        def dfs(i):
            vis[i]=True
            ans.append(i)
            for k in adj[i]:
                indeg[k]-=1
                if indeg[k]==0:
                    dfs(k)
        
        for i in range(num):
            if indeg[i]==0 and not(vis[i]):
                dfs(i)
                
        return ans if len(ans)==num else []

        
